jobs:
  analyze_sources:
    name: Is there any Java source code to lint?
    outputs:
      changed_files: ${{ steps.filter.outputs.src_files }}
      run_checkstyle: ${{ steps.filter.outputs.src }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Install packages...
      run: sudo apt-get install -y sysvbanner
    - continue-on-error: true
      name: Checkout sources
      uses: actions/checkout@v4
    - continue-on-error: true
      id: filter
      name: Look for changes that matters for us...
      uses: dorny/paths-filter@v3
      with:
        filters: "src:\n  - 'src/**/*.java'\n"
        list-files: escape
    - continue-on-error: true
      name: WILL JAVA LINT STEP BE RUN?
      run: 'found="NO"

        [[ ${{ steps.filter.outputs.src }} == ''true'' ]] && found="YES"

        echo "run_checkstyle=${found}" >> $GITHUB_OUTPUT

        echo -e "\n****************************************\n"

        banner "${found}"

        echo -e "****************************************"

        '
  checkstyle:
    if: needs.analyze_sources.outputs.run_checkstyle == 'true'
    name: Code style linter
    needs: analyze_sources
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout sources
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Lint changed files
      run: "# Run CheckStyle\n# https://github.com/checkstyle/checkstyle/releases/\n\
        CHECKSTYLE_VERSION=\"10.3.4\"\nJAR=\"checkstyle-${CHECKSTYLE_VERSION}-all.jar\"\
        \nURL=\"https://github.com/checkstyle/checkstyle/releases/download/checkstyle-${CHECKSTYLE_VERSION}/${JAR}\"\
        \n\necho \"Downloading ${JAR}...\"\nwget --quiet \"${URL}\"\n\n# Using built-in\
        \ config.\ndeclare -r CHECKS_FILE=\"/google_checks.xml\"\ndeclare -r REPORT_FILE=\"\
        output.txt\"\n\n# Let's lint eventually...\necho \"*********************************************************\"\
        \njava -version\necho \"Linting using $(java -jar \"${JAR}\" --version)\"\n\
        java -jar \"${JAR}\" -o \"${REPORT_FILE}\" -c \"${CHECKS_FILE}\" ${{ needs.analyze_sources.outputs.changed_files\
        \ }}\n\n# Plain output always contains \"Starting audit...\" and \"Audit done.\"\
        \ lines. Let's remove them.\nsed -i 's/^Starting audit...$//; s/^Audit done.$//'\
        \ \"${REPORT_FILE}\"\n\n# The `strings` tool is used to filter out empty lines.\n\
        cnt=\"$(strings \"${REPORT_FILE}\" | wc -l)\"\nif [[ \"${cnt}\" -gt 0 ]];\
        \ then\n  echo \"*********************************************************\"\
        \n  echo \"* FIXME! Code style guide violations detected: ${cnt}\"\n  echo\
        \ \"*\"\n  echo \"* For more information about used code style guide see:\"\
        \n  echo \"* https://github.com/logisim-evolution/logisim-evolution/blob/main/docs/style.md\"\
        \n  echo \"*********************************************************\"\n \
        \ cat \"${REPORT_FILE}\"\n  exit 1\nelse\n  echo \"Looks good. No style guide\
        \ violations found.\"\nfi\n"
name: Code style
on:
  repository_dispatch:
    types: trigger-ga___checkstyle.yml
